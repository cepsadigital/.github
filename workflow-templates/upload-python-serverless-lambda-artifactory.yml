name: Build
'on':
  workflow_dispatch: 
  push:
    branches:
      - 'release/**'
    tags:
      - '*'

jobs:
  build:
    env:
      ARTIFACTORY_GENERIC_REPOSITORY: td-generic
      ARTIFACTORY_PYTHON_REPOSITORY: td-pypi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
           python-version: '3.7'
      - name: Install dependencies
        if: startsWith(github.ref, 'refs/tags/') != true
        run: |
          cd ${GITHUB_WORKSPACE}/src
          pip install setuptools wheel twine tox
          echo "$GITHUB_REF"
      - name: Run Python Tests and Code Analysis
        if: startsWith(github.ref, 'refs/tags/') != true
        uses: cepsadigital/github-action-devops-python-testing@1.2.0
        with:
          source-code-folder-name: 'src'
          artifactory-user: ${{ secrets.TD_ARTIFACTORY_USER }}
          artifactory-psw: ${{ secrets.TD_ARTIFACTORY_PSW }}
      - name: SonarQube Scan
        if: startsWith(github.ref, 'refs/tags/') != true
        uses: cepsadigital/github-action-devops-sonar-scan@1.1.0
        with:
          host: ${{ secrets.TD_SONAR_HOST }} 
          login: ${{ secrets.TD_SONAR_USER }}   
          password: ${{ secrets.TD_SONAR_PSW }}
      - name: Build & Publish lambda to artifactory
        uses: cepsadigital/github-action-devops-serverless-lambda-build-and-publish-artifactory@1.1.6
        with:
          source-code-folder-name: 'src'
          artifactory-host: cepsa.jfrog.io
          artifactory-token: ${{ secrets.TD_ARTIFACTORY_TOKEN }}
          artifactory-target-repository: ${{env.ARTIFACTORY_GENERIC_REPOSITORY}}
          artifactory-dependency-repository: ${{env.ARTIFACTORY_PYTHON_REPOSITORY}}
          extra-serverless-packages: serverless-python-requirements
